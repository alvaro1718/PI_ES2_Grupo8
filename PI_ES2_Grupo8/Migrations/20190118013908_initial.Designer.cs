// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PI_ES2_Grupo8.Models;

namespace PI_ES2_Grupo8.Migrations
{
    [DbContext(typeof(ServicoDomicilioDbContext))]
    [Migration("20190118013908_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Enfermeiros", b =>
                {
                    b.Property<int>("EnfermeirosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int>("EspecializaçãoId");

                    b.Property<string>("Morada")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("EnfermeirosId");

                    b.HasIndex("EspecializaçãoId");

                    b.ToTable("Enfermeiros");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Especialização", b =>
                {
                    b.Property<int>("EspecializaçãoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("EspecializaçãoId");

                    b.ToTable("Especialização");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.HorarioServicoDomicilio", b =>
                {
                    b.Property<int>("HorarioServicoDomicilioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Data");

                    b.Property<int?>("EnfermeirosId");

                    b.Property<int>("Hora");

                    b.HasKey("HorarioServicoDomicilioId");

                    b.HasIndex("EnfermeirosId");

                    b.ToTable("HorarioServicoDomicilio");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.HorarioTrabalho", b =>
                {
                    b.Property<int>("HorarioTrabalhoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<int>("EnfermeirosId");

                    b.Property<string>("HoraFim");

                    b.Property<string>("HoraInicio");

                    b.Property<bool>("Troca");

                    b.HasKey("HorarioTrabalhoId");

                    b.HasIndex("EnfermeirosId");

                    b.ToTable("HorarioTrabalho");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Morada")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("MedicoId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Receita", b =>
                {
                    b.Property<int>("ReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("MedicoId");

                    b.Property<int>("Nreceita");

                    b.Property<int>("UtenteId");

                    b.HasKey("ReceitaId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("UtenteId");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.ReceitarTratamento", b =>
                {
                    b.Property<int>("ReceitarTratamentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataTratamento");

                    b.Property<int>("ReceitaId");

                    b.Property<int>("TratamentoId");

                    b.HasKey("ReceitarTratamentoId");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("TratamentoId");

                    b.ToTable("ReceitarTratamento");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Tratamento", b =>
                {
                    b.Property<int>("TratamentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnfermeirosId");

                    b.Property<int?>("HorarioServicoDomicilioId");

                    b.Property<int?>("HorarioTrabalhoId");

                    b.Property<string>("TipodeTratamento")
                        .IsRequired();

                    b.HasKey("TratamentoId");

                    b.HasIndex("EnfermeirosId");

                    b.HasIndex("HorarioServicoDomicilioId");

                    b.HasIndex("HorarioTrabalhoId");

                    b.ToTable("Tratamento");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Troca", b =>
                {
                    b.Property<int>("TrocaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aprovar");

                    b.Property<DateTime>("Data");

                    b.Property<int>("EnfermeirosEId");

                    b.Property<int>("EnfermeirosId");

                    b.Property<int>("HorarioTrabalhoAntigoId");

                    b.Property<int>("HorarioTrabalhoId");

                    b.Property<string>("Justificação")
                        .IsRequired();

                    b.HasKey("TrocaId");

                    b.HasIndex("EnfermeirosEId");

                    b.HasIndex("EnfermeirosId");

                    b.HasIndex("HorarioTrabalhoAntigoId");

                    b.HasIndex("HorarioTrabalhoId");

                    b.ToTable("Troca");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Utente", b =>
                {
                    b.Property<int>("UtenteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int?>("HorarioServicoDomicilioId");

                    b.Property<int?>("HorarioTrabalhoId");

                    b.Property<string>("Morada")
                        .IsRequired();

                    b.Property<string>("N_Utente_Saude")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Problemas");

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("UtenteId");

                    b.HasIndex("HorarioServicoDomicilioId");

                    b.HasIndex("HorarioTrabalhoId");

                    b.ToTable("Utente");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Enfermeiros", b =>
                {
                    b.HasOne("PI_ES2_Grupo8.Models.Especialização", "Especialização")
                        .WithMany("Enfermeiros")
                        .HasForeignKey("EspecializaçãoId");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.HorarioServicoDomicilio", b =>
                {
                    b.HasOne("PI_ES2_Grupo8.Models.Enfermeiros", "Enfermeiros")
                        .WithMany()
                        .HasForeignKey("EnfermeirosId");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.HorarioTrabalho", b =>
                {
                    b.HasOne("PI_ES2_Grupo8.Models.Enfermeiros", "Enfermeiros")
                        .WithMany()
                        .HasForeignKey("EnfermeirosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Receita", b =>
                {
                    b.HasOne("PI_ES2_Grupo8.Models.Medico", "medico")
                        .WithMany("receitas")
                        .HasForeignKey("MedicoId");

                    b.HasOne("PI_ES2_Grupo8.Models.Utente", "utente")
                        .WithMany("receitas")
                        .HasForeignKey("UtenteId");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.ReceitarTratamento", b =>
                {
                    b.HasOne("PI_ES2_Grupo8.Models.Receita", "receita")
                        .WithMany("receitarTratamentos")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PI_ES2_Grupo8.Models.Tratamento", "tratamento")
                        .WithMany("receitarTratamentos")
                        .HasForeignKey("TratamentoId");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Tratamento", b =>
                {
                    b.HasOne("PI_ES2_Grupo8.Models.Enfermeiros")
                        .WithMany("Tratamentos")
                        .HasForeignKey("EnfermeirosId");

                    b.HasOne("PI_ES2_Grupo8.Models.HorarioServicoDomicilio")
                        .WithMany("Tratamentos")
                        .HasForeignKey("HorarioServicoDomicilioId");

                    b.HasOne("PI_ES2_Grupo8.Models.HorarioTrabalho")
                        .WithMany("Tratamentos")
                        .HasForeignKey("HorarioTrabalhoId");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Troca", b =>
                {
                    b.HasOne("PI_ES2_Grupo8.Models.Enfermeiros", "EnfermeiroEscolhido")
                        .WithMany("TrocaE")
                        .HasForeignKey("EnfermeirosEId");

                    b.HasOne("PI_ES2_Grupo8.Models.Enfermeiros", "EnfermeiroRequerente")
                        .WithMany("Trocas")
                        .HasForeignKey("EnfermeirosId");

                    b.HasOne("PI_ES2_Grupo8.Models.HorarioTrabalho", "HorarioTrabalhoAntigo")
                        .WithMany("Trocass")
                        .HasForeignKey("HorarioTrabalhoAntigoId");

                    b.HasOne("PI_ES2_Grupo8.Models.HorarioTrabalho", "HorarioTrabalhoNovo")
                        .WithMany("Trocas")
                        .HasForeignKey("HorarioTrabalhoId");
                });

            modelBuilder.Entity("PI_ES2_Grupo8.Models.Utente", b =>
                {
                    b.HasOne("PI_ES2_Grupo8.Models.HorarioServicoDomicilio")
                        .WithMany("Utente")
                        .HasForeignKey("HorarioServicoDomicilioId");

                    b.HasOne("PI_ES2_Grupo8.Models.HorarioTrabalho")
                        .WithMany("Utente")
                        .HasForeignKey("HorarioTrabalhoId");
                });
#pragma warning restore 612, 618
        }
    }
}
